<?xml version="1.0" encoding="UTF-8"?>

<package schemaVersion="1.3" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="PACK.xsd">
  <vendor>Keil</vendor>
  <name>WCH32F1xx_DFP</name>
  <description> WCH CH32F1 Series Device Support, Drivers and Examples</description>
  <url>http://www.wch.cn/</url>
  <supportContact>tech@wch.cn</supportContact>
  <!-- optional license file -->
  <!-- <license>Documentation/license.txt</license> -->

  
  <releases>
    <release version="1.0.0" date ="2019-12-01">
       First Release version of CH32F1 Device Family Pack.
    </release>
	<release version="1.0.1" date ="2020-09-07">
       CH32F1xx.FLM--->0x8000->0x10000
    </release>
  </releases>

  <keywords>
    <!-- keywords for indexing -->
    <keyword>WCH</keyword>
	<keyword>Device Support</keyword>
	<keyword>CH32</keyword>
	<keyword>CH32F1</keyword>
  </keywords>

  <boards>
    <board vendor="Keil" name="CH32F103R8-EVT" revision="Ver 1.0" salesContact="sales@wch.cn">
      <description>WCH Board Description</description>
      <mountedDevice    deviceIndex="0" Dvendor="WCH:185" Dname="CH32F103R8"/>	
	 </board>
  </boards>
  
  <!-- devices section (mandatory for Device Family Packs) -->
  <devices>
    <family Dfamily="CH32F1 Series" Dvendor="WCH:185">
      <processor Dcore="Cortex-M3" DcoreVersion="r1p1"/>
	  <algorithm  name="Flash/CH32F1xx.FLM"    start="0x08000000"  size="0x10000"                  default="1"/>
      <algorithm  name="Flash/CH32F1xx_OPT.FLM"   start="0x1FFFF800"  size="0x0010"                   default="0"/>      
	  <compile header="Device/Include/ch32f10x.h"/>
      <debug      svd="SVD/CH32F103xx.svd"/>
      <debugvars configfile="Debug/CH32F1xx.dbgconf" version="1.0.0">
        // Debug Access Variables, can be modified by user via copies of DBGCONF files as created by uVision. Also see sub-family level.
        __var DbgMCU_CR      = 0x00000007;   // Debug MCU Configuration Register
      </debugvars>

      <sequences>

        <!-- Override for Pre-Defined DebugCoreStart Sequence -->
        <sequence name="DebugCoreStart">
          <block>
            // Replication of Standard Functionality
            Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR

            // Device Specific Debug Setup
            Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
          </block>
      </sequence>

        <!-- Override for Pre-Defined TraceStart Sequence -->
      <sequence name="TraceStart">
          <block>
            __var traceSWO    = (__traceout &amp; 0x1) != 0;                        // SWO Trace Selected?
            __var traceTPIU   = (__traceout &amp; 0x2) != 0;                        // TPIU Trace Selected?
          </block>

          <control if="traceSWO">
            <block>
              Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
            </block>
          </control>

          <control if="traceTPIU">
            <block>
              Sequence("EnableTraceTPIU");                                          // Call TPIU Trace Setup
            </block>
          </control>

      </sequence>

        <!-- User-Defined EnableTraceSWO Sequence -->
        <sequence name="EnableTraceSWO">
          <block>
            __var dbgmcu_val    = 0;                                                // DBGMCU_CR Value

            dbgmcu_val  = Read32(0xE0042004) &amp; (~0xE0);                         // Read DBGMCU_CR and clear trace setup
            dbgmcu_val |= (1 &lt;&lt; 5);                                           // Trace I/O Enable + Trace Mode Asynchronous

            Write32(0xE0042004, dbgmcu_val);                                        // Write DBGMCU_CR: Trace Settings
          </block>
        </sequence>

        <!-- User-Defined EnableTraceTPIU Sequence -->
        <sequence name="EnableTraceTPIU">
          <block>
            __var width         = (__traceout &amp; 0x003F0000) &gt;&gt; 16;        // TPIU Port Width
            __var dbgmcu_val    = 0;                                                // DBGMCU_CR Value

            dbgmcu_val  = Read32(0xE0042004) &amp; (~0xE0);                         // Read DBGMCU_CR and clear trace setup
            dbgmcu_val |= (1 &lt;&lt; 5);                                           // Trace I/O Enable

          </block>

          <control if="width == 1">
            <block>
              // 1-Bit TPIU Trace Setup
              dbgmcu_val    |= (1 &lt;&lt; 6);                                      // Trace Mode (1-Bit)
            </block>
          </control>

          <control if="width == 2">
            <block>
              // 2-Bit TPIU Trace Setup
              dbgmcu_val    |= (2 &lt;&lt; 6);                                      // Trace Mode (2-Bit)
            </block>
          </control>

          <control if="width == 4">
            <block>
              // 4-Bit TPIU Trace Setup
              dbgmcu_val    |= (3 &lt;&lt; 6);                                      // Trace Mode (4-Bit)
            </block>
          </control>

          <block>
            // Write Trace Configuration to Target
            Write32(0xE0042004, dbgmcu_val);                                        // Write DBGMCU_CR: Trace Settings
          </block>

        </sequence>
      </sequences>
      <book    name="Documents/dui0552a_cortex_m3_dgug.pdf"           title="Cortex-M3 Generic User Guide"/>
	 <description>
	WCH' CH32F1 series of mainstream MCUs covers the needs of a large variety of applications in the industrial,medical and consumer markets. High performance with first-class peripherals and low-power,low-voltage operation is paired with a high level of integration at accessible prices with a simple architecture and easy-to-use tools.
	--20K SRAM and 64K Flash
	--Power support 2.7v-5.5v
	--12bit DAC
	--12bit ADC
	--USBHD support Host/Device
	--USBD	support Full/Low Speed
	--TouchKey *16
	--CAN、SPI、UART、I2C、PWM...
      </description>
      <feature type="WDT"           n="2"/>
      <feature type="RTC"           n="32768"/>
      <feature type="VCC"           n="2.70"    m="5.50"/>
      <feature type="Temp"          n="-40"     m="85"/>
	  <subFamily DsubFamily="CH32F103">
      <!-- *************************  Device 'CH32F103C6'  ***************************** -->
      <device Dname="CH32F103C6">
        <processor Dfpu="0" Dmpu="0" Dendian="Little-endian" Dclock="72000000"/>
        <memory     id="IROM1"                      start="0x08000000"  size="0x8000"     startup="1"   default="1"/>
        <memory     id="IRAM1"                      start="0x20000000"  size="0x2800"     init   ="0"   default="1"/>
        <!-- 占用128B，16B定义功能，其余未定义，可自定义使用-->
      </device>
      <!-- *************************  Device 'CH32F103C8'  ***************************** -->
      <device Dname="CH32F103C8">
        <processor Dfpu="0" Dmpu="0" Dendian="Little-endian" Dclock="72000000"/>
        <memory     id="IROM1"                      start="0x08000000"  size="0x10000"    startup="1"   default="1"/>
        <memory     id="IRAM1"                      start="0x20000000"  size="0x5000"     init   ="0"   default="1"/>
      </device>

      <!-- *************************  Device 'CH32F103R6'  ***************************** -->
      <device Dname="CH32F103R6">
        <processor Dfpu="0" Dmpu="0" Dendian="Little-endian" Dclock="72000000"/>
        <memory     id="IROM1"                      start="0x08000000"  size="0x8000"     startup="1"   default="1"/>
        <memory     id="IRAM1"                      start="0x20000000"  size="0x2800"     init   ="0"   default="1"/>
      </device>

      <!-- *************************  Device 'CH32F103R8'  ***************************** -->
      <device Dname="CH32F103R8">
        <processor Dfpu="0" Dmpu="0" Dendian="Little-endian" Dclock="72000000"/>
        <memory     id="IROM1"                      start="0x08000000"  size="0x10000"    startup="1"   default="1"/>
        <memory     id="IRAM1"                      start="0x20000000"  size="0x5000"     init   ="0"   default="1"/>
      </device>
      </subFamily>		
    </family>
  </devices>

   <!-- conditions section (optional for all Software Packs)-->
  <conditions>
	<condition id="Compiler ARM">
      <require Tcompiler="ARMCC"/>
    </condition>
	
	 <condition id="CH32F1xx">
      <description>WCH CH32F1xx Device</description>
      <require Dvendor="WCH:185" Dname="CH32F1*"/>
	  </condition>
	<condition id="CH32F1xx ARMCC">
      <description>filter for CH32F1xx Device and the ARM compiler</description>
      <require condition="CH32F1xx"/>
      <require Tcompiler="ARMCC"/>
    </condition>
	  
	 <condition id="CH32F1xx CMSIS">
      <description>WCH CH32F1xx Device with CMSIS</description>
      <require condition="CH32F1xx"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>
	
	 <condition id="CH32F1xx STDPERIPH">
      <description>WCH CH32F1xx with Standard Peripherals Drivers Framework</description>
      <require condition="CH32F1xx CMSIS"/>
	  <require Cclass="CH32F1xx" Cgroup="Startup" />
      <require Cclass="CH32F1xx" Cgroup="StdPeriph Drivers" Csub="Framework"/>
    </condition>
	  <condition id="CH32F1xx STDPERIPH RCC">
      <description>WCH CH32F1xx with Standard Peripherals Drivers Framework and RCC</description>
      <require condition="CH32F1xx CMSIS"/>
      <require Cclass="CH32F1xx" Cgroup="StdPeriph Drivers" Csub="Framework"/>
      <require Cclass="CH32F1xx" Cgroup="StdPeriph Drivers" Csub="RCC"/>
    </condition>
  </conditions> 
  
  
  <!-- component section (optional for all Software Packs)config属性是可以更改内容的-->
	<components>
		
	    <component Cclass="CH32F1xx" Cgroup="Startup" Cversion="1.0.0" condition="CH32F1xx CMSIS">
      <description>System Startup for WCH CH32F1xx device series</description>
      <files>
        <!--  include folder -->
        <file category="include" name="Device/Include/"/>

        <!-- Flash Option Bytes templates -->
        <file category="source" name="Device/Source/ARM/CH32F1xx_OPT.s"      attr="template"  condition="Compiler ARM" select="Flash Option Bytes Template"/>

        <!-- startup files -->
        <file category="source" name="Device/Source/ARM/startup_ch32f10x.s" attr="config" version="1.0.0" condition="CH32F1xx ARMCC"/>
        <!-- system file -->
        <file category="source" name="Device/Source/system_ch32f10x.c"            attr="config" version="1.0.0" />
       
      </files>
    </component>

    <!-- START: Standard Peripherals Drivers -->
    <!-- START: Standard Peripherals Drivers -->

    <component Cclass="CH32F1xx" Cgroup="StdPeriph Drivers" Csub="Framework" Cversion="1.0.0" condition="CH32F1xx STDPERIPH">
      <description>Standard Peripherals Drivers Framework</description>
      <files>
        <file category="include" name="Device/StdPeriph_Driver/inc/"/>
        <file category="header"  name="Device/StdPeriph_Driver/inc/ch32f10x_misc.h"/>
        <file category="source"  name="Device/StdPeriph_Driver/src/ch32f10x_misc.c"/>
        <file category="header"  name="Device/StdPeriph_Driver/templates/ch32f10x_conf.h" attr="config" version="1.0.0"/>
        <file category="header"  name="Device/StdPeriph_Driver/templates/ch32f10x_it.h"   attr="template" select="Interrupt Service Routines"/>
        <file category="source"  name="Device/StdPeriph_Driver/templates/ch32f10x_it.c"   attr="template" select="Interrupt Service Routines"/>
      </files>
    </component>

    <component Cclass="CH32F1xx" Cgroup="StdPeriph Drivers" Csub="ADC" Cversion="1.0.0" condition="CH32F1xx STDPERIPH RCC">
      <description>Analog-to-digital converter (ADC) driver for CH32F1xx</description>

      <files>
        <file category="header" name="Device/StdPeriph_Driver/inc/ch32f10x_adc.h"/>
        <file category="source" name="Device/StdPeriph_Driver/src/ch32f10x_adc.c"/>
      </files>
    </component>

    <component Cclass="CH32F1xx" Cgroup="StdPeriph Drivers" Csub="BKP" Cversion="1.0.0" condition="CH32F1xx STDPERIPH">
      <description>Backup registers (BKP) driver for ch32f10x</description>
      <files>
        <file category="header" name="Device/StdPeriph_Driver/inc/ch32f10x_bkp.h"/>
        <file category="source" name="Device/StdPeriph_Driver/src/ch32f10x_bkp.c"/>
      </files>
    </component>

    <component Cclass="CH32F1xx" Cgroup="StdPeriph Drivers" Csub="CAN" Cversion="1.0.0" condition="CH32F1xx STDPERIPH RCC">
      <description>Controller area network (CAN) driver for CH32F1xx</description>
      <files>
        <file category="header" name="Device/StdPeriph_Driver/inc/ch32f10x_can.h"/>
        <file category="source" name="Device/StdPeriph_Driver/src/ch32f10x_can.c"/>
      </files>
    </component>


    <component Cclass="CH32F1xx" Cgroup="StdPeriph Drivers" Csub="CRC" Cversion="1.0.0" condition="CH32F1xx STDPERIPH ">
      <description>CRC calculation unit (CRC) driver for CH32F1xx</description>
      <files>
        <file category="header" name="Device/StdPeriph_Driver/inc/ch32f10x_crc.h"/>
        <file category="source" name="Device/StdPeriph_Driver/src/ch32f10x_crc.c"/>
      </files>
    </component>

    <component Cclass="CH32F1xx" Cgroup="StdPeriph Drivers" Csub="DAC" Cversion="1.0.0" condition="CH32F1xx STDPERIPH RCC">
      <description>Digital-to-analog converter (DAC) driver for CH32F1xx</description>
      <files>
        <file category="header" name="Device/StdPeriph_Driver/inc/ch32f10x_dac.h"/>
        <file category="source" name="Device/StdPeriph_Driver/src/ch32f10x_dac.c"/>
      </files>
    </component>

    <component Cclass="CH32F1xx" Cgroup="StdPeriph Drivers" Csub="DBGMCU" Cversion="1.0.0" condition="CH32F1xx STDPERIPH">
      <description>MCU debug component (DBGMCU) driver for CH32F1xx</description>
      <files>
        <file category="header" name="Device/StdPeriph_Driver/inc/ch32f10x_dbgmcu.h"/>
        <file category="source" name="Device/StdPeriph_Driver/src/ch32f10x_dbgmcu.c"/>
      </files>
    </component>

    <component Cclass="CH32F1xx" Cgroup="StdPeriph Drivers" Csub="DMA" Cversion="1.0.0" condition="CH32F1xx STDPERIPH RCC">
      <description>DMA controller (DMA) driver for CH32F1xx</description>
      <files>
        <file category="header" name="Device/StdPeriph_Driver/inc/ch32f10x_dma.h"/>
        <file category="source" name="Device/StdPeriph_Driver/src/ch32f10x_dma.c"/>
      </files>
    </component>

    <component Cclass="CH32F1xx" Cgroup="StdPeriph Drivers" Csub="EXTI" Cversion="1.0.0" condition="CH32F1xx STDPERIPH">
      <description>External interrupt/event controller (EXTI) driver for CH32F1xx</description>
      <files>
        <file category="header" name="Device/StdPeriph_Driver/inc/ch32f10x_exti.h"/>
        <file category="source" name="Device/StdPeriph_Driver/src/ch32f10x_exti.c"/>
      </files>
    </component>

    <component Cclass="CH32F1xx" Cgroup="StdPeriph Drivers" Csub="Flash" Cversion="1.0.0" condition="CH32F1xx STDPERIPH">
      <description>Embedded Flash memory driver for CH32F1xx</description>
      <files>
        <file category="header" name="Device/StdPeriph_Driver/inc/ch32f10x_flash.h"/>
        <file category="source" name="Device/StdPeriph_Driver/src/ch32f10x_flash.c"/>
      </files>
    </component>

    <component Cclass="CH32F1xx" Cgroup="StdPeriph Drivers" Csub="GPIO" Cversion="1.0.0" condition="CH32F1xx STDPERIPH RCC">
      <description>General-purpose I/O (GPIO) driver for CH32F1xx</description>
      <files>
        <file category="header" name="Device/StdPeriph_Driver/inc/ch32f10x_gpio.h"/>
        <file category="source" name="Device/StdPeriph_Driver/src/ch32f10x_gpio.c"/>
      </files>
    </component>

    <component Cclass="CH32F1xx" Cgroup="StdPeriph Drivers" Csub="I2C" Cversion="1.0.0" condition="CH32F1xx STDPERIPH RCC">
      <description>Inter-integrated circuit (I2C) interface driver for CH32F1xx</description>
      <files>
        <file category="header" name="Device/StdPeriph_Driver/inc/ch32f10x_i2c.h"/>
        <file category="source" name="Device/StdPeriph_Driver/src/ch32f10x_i2c.c"/>
      </files>
    </component>

    <component Cclass="CH32F1xx" Cgroup="StdPeriph Drivers" Csub="IWDG" Cversion="1.0.0" condition="CH32F1xx STDPERIPH ">
      <description>Independent watchdog (IWDG) driver for CH32F1xx</description>
      <files>
        <file category="header" name="Device/StdPeriph_Driver/inc/ch32f10x_iwdg.h"/>
        <file category="source" name="Device/StdPeriph_Driver/src/ch32f10x_iwdg.c"/>
      </files>
    </component>

    <component Cclass="CH32F1xx" Cgroup="StdPeriph Drivers" Csub="PWR" Cversion="1.0.0" condition="CH32F1xx STDPERIPH RCC">
      <description>Power controller (PWR) driver for CH32F1xx</description>
      <files>
        <file category="header" name="Device/StdPeriph_Driver/inc/ch32f10x_pwr.h"/>
        <file category="source" name="Device/StdPeriph_Driver/src/ch32f10x_pwr.c"/>
      </files>
    </component>

    <component Cclass="CH32F1xx" Cgroup="StdPeriph Drivers" Csub="RCC" Cversion="1.0.0" condition="CH32F1xx STDPERIPH">
      <description>Reset and clock control (RCC) driver for CH32F1xx</description>
      <files>
        <file category="header" name="Device/StdPeriph_Driver/inc/ch32f10x_rcc.h"/>
        <file category="source" name="Device/StdPeriph_Driver/src/ch32f10x_rcc.c"/>
      </files>
    </component>

    <component Cclass="CH32F1xx" Cgroup="StdPeriph Drivers" Csub="RTC" Cversion="1.0.0" condition="CH32F1xx STDPERIPH">
      <description>Real-time clock (RTC) driver for CH32F1xx</description>
      <files>
        <file category="header" name="Device/StdPeriph_Driver/inc/ch32f10x_rtc.h"/>
        <file category="source" name="Device/StdPeriph_Driver/src/ch32f10x_rtc.c"/>
      </files>
    </component>

    <component Cclass="CH32F1xx" Cgroup="StdPeriph Drivers" Csub="SPI" Cversion="1.0.0" condition="CH32F1xx STDPERIPH RCC">
      <description>Serial peripheral interface (SPI) driver for CH32F1xx</description>
      <files>
        <file category="header" name="Device/StdPeriph_Driver/inc/ch32f10x_spi.h"/>
        <file category="source" name="Device/StdPeriph_Driver/src/ch32f10x_spi.c"/>
      </files>
    </component>

    <component Cclass="CH32F1xx" Cgroup="StdPeriph Drivers" Csub="TIM" Cversion="1.0.0" condition="CH32F1xx STDPERIPH RCC">
      <description>Timers (TIM) driver for CH32F1xx</description>
      <files>
        <file category="header" name="Device/StdPeriph_Driver/inc/ch32f10x_tim.h"/>
        <file category="source" name="Device/StdPeriph_Driver/src/ch32f10x_tim.c"/>
      </files>
    </component>

    <component Cclass="CH32F1xx" Cgroup="StdPeriph Drivers" Csub="USART" Cversion="1.0.0" condition="CH32F1xx STDPERIPH RCC">
      <description>Universal synchronous asynchronous receiver transmitter (USART) driver for CH32F1xx</description>
      <files>
        <file category="header" name="Device/StdPeriph_Driver/inc/ch32f10x_usart.h"/>
        <file category="source" name="Device/StdPeriph_Driver/src/ch32f10x_usart.c"/>
      </files>
    </component>

    <component Cclass="CH32F1xx" Cgroup="StdPeriph Drivers" Csub="WWDG" Cversion="1.0.0" condition="CH32F1xx STDPERIPH RCC">
      <description>Window watchdog (WWDG) driver for CH32F1xx</description>
      <files>
        <file category="header" name="Device/StdPeriph_Driver/inc/ch32f10x_wwdg.h"/>
        <file category="source" name="Device/StdPeriph_Driver/src/ch32f10x_wwdg.c"/>
      </files>
    </component>
   </components>
  


  <!-- examples section (optional for all Software Packs)-->
  <!--
  -->
    <examples>
		<example name="StdPeriphDriver ADC" doc="Abstract.txt" folder="Boards/Keil/ADC/ADC_DMA">
			<description>All StdPeriphDriver example</description>
			<board name="CH32F103R8-EVT" vendor="Keil"/>
			<project>
				<environment name="uv" load="CH32F10x.uvprojx"/>
			</project>
			<attributes>
				<category>Getting Started</category>
			</attributes>
		</example>
		
	</examples>
 
  <!-- optional taxonomy section for defining new component Class and Group names -->
  <!--
  <taxonomy>
  </taxonomy>
  -->
  
</package>
